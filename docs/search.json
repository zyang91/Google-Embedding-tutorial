[
  {
    "objectID": "satellite-embedding/regression.html",
    "href": "satellite-embedding/regression.html",
    "title": "Visulization",
    "section": "",
    "text": "Code\nimport geemap\nimport ee\n\n\n/home/zyang91/anaconda3/envs/geosptial/lib/python3.13/site-packages/geemap/conversion.py:23: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools&lt;81.\n  import pkg_resources\nCode\nee.Authenticate()\n\n\n\n            \n            \n\n\nTrue\nCode\nee.Initialize(project=\"ee-zhanchaoyang\")\nCode\nm = geemap.Map(center=(40, -100), zoom=4)\nm\nCode\ngeometry = ee.Geometry.Polygon(\n    [[74.322, 14.981], [74.322, 14.765], [74.648, 14.765], [74.648, 14.980]]\n)\nCode\nm.add_basemap(\"SATELLITE\")\nCode\nm.addLayer(geometry, {}, \"geometry\")\nm.centerObject(geometry)\nCode\nstartDate = ee.Date.fromYMD(2022, 1, 1)\nCode\nendDate = ee.Date.fromYMD(2023, 1, 1)\nCode\nembeddings = ee.ImageCollection(\"GOOGLE/SATELLITE_EMBEDDING/V1/ANNUAL\")\nCode\nembeddingsFiltered = embeddings.filter(ee.Filter.date(startDate, endDate)).filter(\n    ee.Filter.bounds(geometry)\n)\nCode\nembeddings_vis = embeddingsFiltered.median().clip(geometry)\nCode\nvis_params = {\n    \"bands\": [\"A00\", \"A01\", \"A02\"],\n    \"min\": -0.5,\n    \"max\": 0.5,\n}\nCode\nm.addLayer(embeddings_vis, vis_params, \"embeddings\")\nm"
  },
  {
    "objectID": "satellite-embedding/regression.html#tasks-continue",
    "href": "satellite-embedding/regression.html#tasks-continue",
    "title": "Visulization",
    "section": "Tasks continue",
    "text": "Tasks continue\n\n\nCode\n# check the projections\nembeddingsProjection = ee.Image(embeddingsFiltered.first()).select(0).projection()\n\n\n\n            \n            \n\n\n\n\nCode\nembeddingsProjection\n\n\n\n            \n            \n\n\nProjectiontype:Projectioncrs:EPSG:32643transform: [10, 0, 336160, 0, 10, 1474560]0:101:02:3361603:04:105:1474560\n\n\n\n\nCode\nembeddingsImage = embeddingsFiltered.mosaic().setDefaultProjection(embeddingsProjection)\n\n\n\n            \n            \n\n\n\n\nCode\ngedi = ee.ImageCollection(\"LARSE/GEDI/GEDI04_A_002_MONTHLY\")\n\n\n\n            \n            \n\n\n\n\nCode\ndef qualityMask(image):\n    mask = image.updateMask(image.select(\"l4_quality_flag\").eq(1)).updateMask(\n        image.select(\"degrade_flag\").eq(0)\n    )\n    return mask\n\n\n\n            \n            \n\n\n\n\nCode\ndef errorMask(image):\n    relative_se = image.select(\"agbd_se\").divide(image.select(\"agbd\"))\n    error_mask = image.updateMask(relative_se.lte(0.5))\n    return error_mask\n\n\n\n            \n            \n\n\n\n\nCode\ndef SlopeMask(image):\n    glo30 = ee.ImageCollection(\"COPERNICUS/DEM/GLO30\")\n    glo30Filtered = glo30.filter(ee.Filter.bounds(geometry)).select(\"DEM\")\n    demProj = glo30Filtered.first().select(0).projection()\n    elevation = glo30Filtered.mosaic().rename(\"dem\").setDefaultProjection(demProj)\n    slope = ee.Terrain.slope(elevation)\n    slope_mask = image.updateMask(slope.lte(30))\n    return slope_mask\n\n\n\n            \n            \n\n\n\n\nCode\ngediFiltered = gedi.filter(ee.Filter.date(startDate, endDate)).filter(\n    ee.Filter.bounds(geometry)\n)\n\n\n\n            \n            \n\n\n\n\nCode\ngediProjection = ee.Image(gediFiltered.first()).select(\"agbd\").projection()\n\n\n\n            \n            \n\n\n\n\nCode\ngedi_processed = gediFiltered.map(qualityMask).map(errorMask).map(SlopeMask)\n\n\n\n            \n            \n\n\n\n\nCode\ngediMosaic = gedi_processed.mosaic().select(\"agbd\").setDefaultProjection(gediProjection)\n\n\n\n            \n            \n\n\n\n\nCode\ngediVis = {\n    min: 0,\n    max: 200,\n    \"palette\": [\"#edf8fb\", \"#b2e2e2\", \"#66c2a4\", \"#2ca25f\", \"#006d2c\"],\n    \"bands\": [\"agbd\"],\n}\n\n\n\n            \n            \n\n\n\n\nCode\nm.addLayer(gedi_processed, gediVis, \"gedi\")\nm\n\n\n\n            \n            \n\n\n\n\n\n\n\nCode\ngridScale = 100\n\n\n\n            \n            \n\n\n\n\nCode\ngridProjection = ee.Projection(\"EPSG:3857\").atScale(gridScale)\n\n\n\n            \n            \n\n\n\n\nCode\nstacked = embeddingsImage.addBands(gediMosaic)\n\n\n\n            \n            \n\n\n\n\nCode\nstacked = stacked.resample(\"bilinear\")\n\n\n\n            \n            \n\n\n\n\nCode\nstackedResampled = stacked.reduceResolution(\n    reducer=ee.Reducer.mean(), maxPixels=1024\n).reproject(crs=gridProjection)\n\n\n\n            \n            \n\n\n\n\nCode\nstackedResampled = stackedResampled.updateMask(stackedResampled.mask().gt(0))\n\n\n\n            \n            \n\n\n\n\nCode\nexport_image = stackedResampled.clip(geometry)\n\n\n\n            \n            \n\n\n\n\nCode\ngeemap.ee_export_image_to_drive(\n    export_image,\n    description=\"GEDI_Mosaic_Export\",\n    folder=\"EarthEngine\",  # Change to your Google Drive folder\n    fileNamePrefix=\"gedi_mosaic\",  # No \".tif\" extension\n    scale=gridScale,\n    region=geometry,\n    maxPixels=1e10,\n)\n\n\n\n            \n            \n\n\n\n\nCode\npredictors = embeddingsImage.bandNames()\n\n\n\n            \n            \n\n\n\n\nCode\npredicted = gediMosaic.bandNames().get(0)\n\n\n\n            \n            \n\n\n\n\nCode\nprint(\"predictors\", predictors.getInfo())\n\n\n\n            \n            \n\n\npredictors ['A00', 'A01', 'A02', 'A03', 'A04', 'A05', 'A06', 'A07', 'A08', 'A09', 'A10', 'A11', 'A12', 'A13', 'A14', 'A15', 'A16', 'A17', 'A18', 'A19', 'A20', 'A21', 'A22', 'A23', 'A24', 'A25', 'A26', 'A27', 'A28', 'A29', 'A30', 'A31', 'A32', 'A33', 'A34', 'A35', 'A36', 'A37', 'A38', 'A39', 'A40', 'A41', 'A42', 'A43', 'A44', 'A45', 'A46', 'A47', 'A48', 'A49', 'A50', 'A51', 'A52', 'A53', 'A54', 'A55', 'A56', 'A57', 'A58', 'A59', 'A60', 'A61', 'A62', 'A63']\n\n\n\n\nCode\nprint(\"predicted\", predicted.getInfo())\n\n\n\n            \n            \n\n\npredicted agbd\n\n\n\n\nCode\npredictorImage = stackedResampled.select(predictors)\n\n\n\n            \n            \n\n\n\n\nCode\npredictedImage = stackedResampled.select([predicted])\n\n\n\n            \n            \n\n\n\n\nCode\nclassMask = predictedImage.mask().toInt().rename(\"class\")\n\n\n\n            \n            \n\n\n\n\nCode\nnumSamples = 1000\n\n\n\n            \n            \n\n\n\n\nCode\ntraining = stackedResampled.addBands(classMask).stratifiedSample(\n    numPoints=numSamples,\n    classBand=\"class\",\n    region=geometry,\n    scale=gridScale,\n    classValues=[0, 1],\n    classPoints=[0, numSamples],\n    dropNulls=True,\n    tileScale=16,\n)\n\n\n\n            \n            \n\n\n\n\nCode\nmodel = (\n    ee.Classifier.smileRandomForest(50)\n    .setOutputMode(\"REGRESSION\")\n    .train(features=training, classProperty=predicted, inputProperties=predictors)\n)\n\n\n\n            \n            \n\n\n\n\nCode\npredicted = training.classify(classifier=model, outputName=\"agbd_predicted\")\n\n\n\n            \n            \n\n\n\n\nCode\ndef calculatermse(inputs):\n    observed = ee.Array(inputs.aggregate_array(\"agbd\"))\n    predicted = ee.Array(inputs.aggregate_array(\"agbd_predicted\"))\n    rmse = (\n        observed.subtract(predicted)\n        .pow(2)\n        .reduce(ee.Reducer.mean(), [0])\n        .sqrt()\n        .get([0])\n    )\n    return rmse\n\n\n\n            \n            \n\n\n\n\nCode\nrmse = calculatermse(predicted)\nprint(\"RMSE\", rmse.getInfo())\n\n\n\n            \n            \n\n\nRMSE 28.506312098165626"
  },
  {
    "objectID": "satellite-embedding/regression.html#plot",
    "href": "satellite-embedding/regression.html#plot",
    "title": "Visulization",
    "section": "Plot",
    "text": "Plot\n\n\nCode\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "slides/slides.html#about-me",
    "href": "slides/slides.html#about-me",
    "title": "Satellite and Population Embedding",
    "section": "About Me",
    "text": "About Me\n\n\n\n\n\n\nZhanchao Yang\n\nMaster of City Planning (MCP)\nMaster of Urban Spatial Analytics (MUSA)\nBachelor of Arts in Geography, SUNY Binghamton\nResearch Assistant, Weitzman School of Design"
  },
  {
    "objectID": "slides/slides.html#what-is-embeddings",
    "href": "slides/slides.html#what-is-embeddings",
    "title": "Satellite and Population Embedding",
    "section": "What is Embeddings?",
    "text": "What is Embeddings?\n\nIn general terms, embeddings are numerical representations of complex information that capture the most important features or relationships in a simplified, machine-readable form."
  },
  {
    "objectID": "slides/slides.html#blackbox-nature-of-embeddings",
    "href": "slides/slides.html#blackbox-nature-of-embeddings",
    "title": "Satellite and Population Embedding",
    "section": "Blackbox Nature of Embeddings",
    "text": "Blackbox Nature of Embeddings\n\n\nGenerated through various neural network models (GNN or CNN) trained on a large datasets.\nExact architecture and training process vary widely.\nThe company or research institutions may not disclose the full details of their models."
  },
  {
    "objectID": "slides/slides.html#population-dynamics-foundation-pdfm-embeddings",
    "href": "slides/slides.html#population-dynamics-foundation-pdfm-embeddings",
    "title": "Satellite and Population Embedding",
    "section": "Population Dynamics Foundation (PDFM) Embeddings",
    "text": "Population Dynamics Foundation (PDFM) Embeddings\n\n\n\nDeveloped by Google Research (Google Deep Mind) in 2024.\nInput:\n\nCensus data\nSearching Trends\nOther geospatial data\n\nOutput:\n\nMulti-dimensional vectors (represent population characteristics and dynamics)."
  },
  {
    "objectID": "slides/slides.html#how-pdfm-embeddings-look-like",
    "href": "slides/slides.html#how-pdfm-embeddings-look-like",
    "title": "Satellite and Population Embedding",
    "section": "How PDFM Embeddings look like?",
    "text": "How PDFM Embeddings look like?\n\n\n\n330-dimensional vectors for each census tract or ZIP code\nEach dimension captures different aspects of population dynamics\nExamples of captured features:\n\nMobility patterns\nSearch behavior trends\nLocal economic activity\nEnvironmental conditions"
  },
  {
    "objectID": "slides/slides.html#applications-of-pdfm-embeddings",
    "href": "slides/slides.html#applications-of-pdfm-embeddings",
    "title": "Satellite and Population Embedding",
    "section": "Applications of PDFM Embeddings",
    "text": "Applications of PDFM Embeddings\nHealth & Social Services:\n\nDisease prevalence prediction\nHealthcare resource allocation\n\nEconomic Analysis:\n\nSocioeconomic indicators modeling\nIncome and poverty estimation\n\nUrban Planning:\n\nPopulation growth forecasting\nPOI and hotspot prediction"
  },
  {
    "objectID": "slides/slides.html#demo-1-using-pdfm-embeddings-to-predict-housing-prices",
    "href": "slides/slides.html#demo-1-using-pdfm-embeddings-to-predict-housing-prices",
    "title": "Satellite and Population Embedding",
    "section": "Demo 1: Using PDFM Embeddings to predict housing prices",
    "text": "Demo 1: Using PDFM Embeddings to predict housing prices\nDataset:\n\nZillow Home Value Index (ZHVI) by ZIP code\nPDFM embeddings (330 features)\n\nModel:\n\nLinear Regression (Stepwise regression)\nData mining approaches\nOutput: Predicted home prices"
  },
  {
    "objectID": "slides/slides.html#satellite-foundation-model-sfm-embeddings",
    "href": "slides/slides.html#satellite-foundation-model-sfm-embeddings",
    "title": "Satellite and Population Embedding",
    "section": "Satellite Foundation Model (SFM) Embeddings",
    "text": "Satellite Foundation Model (SFM) Embeddings\n\nDeveloped by Google Research\nBased on Sentinel-2 satellite imagery\nGlobal coverage (2017-2023)\nSpatial resolution: 10 meters\nAvailable through Google Earth Engine"
  },
  {
    "objectID": "slides/slides.html#what-they-capture",
    "href": "slides/slides.html#what-they-capture",
    "title": "Satellite and Population Embedding",
    "section": "What they capture",
    "text": "What they capture\n\nLand cover patterns\nVegetation characteristics\nUrban development\nEnvironmental changes\nTemporal dynamics\n\nTrained on massive satellite imagery corpus using self-supervised learning"
  },
  {
    "objectID": "slides/slides.html#satellite-embeddings-with-google-earth-engine-gee",
    "href": "slides/slides.html#satellite-embeddings-with-google-earth-engine-gee",
    "title": "Satellite and Population Embedding",
    "section": "Satellite Embeddings with Google Earth Engine (GEE)",
    "text": "Satellite Embeddings with Google Earth Engine (GEE)\nDataset:\n\nGOOGLE/SATELLITE_EMBEDDING/V1/ANNUAL\n65 bands\n\nKey Operations:\n\nFilter by date and location\nExtract embeddings for points/regions\nCompare temporal changes\nCalculate similarity (dot product)"
  },
  {
    "objectID": "slides/slides.html#applications-of-sfm-embeddings",
    "href": "slides/slides.html#applications-of-sfm-embeddings",
    "title": "Satellite and Population Embedding",
    "section": "Applications of SFM Embeddings",
    "text": "Applications of SFM Embeddings\nEnvironmental and Land Use Planning\n\nUrban sprawl analysis\nLand cover classification\nChange detection\nDevelopment planning\n\nTemporal Analysis:\n\nSeasonal pattern detection\nLong-term trend analysis\nBefore/after comparisons\nSimilarity searches across time"
  },
  {
    "objectID": "slides/slides.html#demo-2-satellite-embeddings-for-land-cover-classification",
    "href": "slides/slides.html#demo-2-satellite-embeddings-for-land-cover-classification",
    "title": "Satellite and Population Embedding",
    "section": "Demo 2: Satellite Embeddings for Land Cover Classification",
    "text": "Demo 2: Satellite Embeddings for Land Cover Classification\nApproach:\n\nUse embeddings as features\nTrain classification model\nPredict land cover types\n\nAdvantages:\n\nNo need to process raw imagery\nPre-trained representations\nFaster than traditional methods"
  },
  {
    "objectID": "slides/slides.html#workflow",
    "href": "slides/slides.html#workflow",
    "title": "Satellite and Population Embedding",
    "section": "Workflow",
    "text": "Workflow\n\nDefine area of interest\nLoad embedding ImageCollection\nExtract features for labeled samples\nTrain classifier (Random Forest, SVM)\nApply to entire region\nValidate results\n\nUses Earth Engine’s cloud computing for scalability"
  },
  {
    "objectID": "slides/slides.html#limitations-and-concerns",
    "href": "slides/slides.html#limitations-and-concerns",
    "title": "Satellite and Population Embedding",
    "section": "Limitations and Concerns",
    "text": "Limitations and Concerns\nInterpretability Issues:\n\nBlack box representations\nLimited transparency in training process\n\nBias and Fairness:\n\nMay encode historical biases\nRisk of perpetuating spatial inequalities\n\nTechnical Limitations:\n\nResolution constraints (10m for satellite)\nUpdates not in real-time\n\n…"
  },
  {
    "objectID": "slides/slides.html#summary-and-conclusions",
    "href": "slides/slides.html#summary-and-conclusions",
    "title": "Satellite and Population Embedding",
    "section": "Summary and Conclusions",
    "text": "Summary and Conclusions\nThe Promise:\n\nPowerful tools for spatial analysis\nCapture complex patterns (Privacy concerns)\n\nThe Reality:\n\nRequire careful validation\nComplement, not replace\n\nBest Practices:\n\nValidate predictions thoroughly\nBe aware of limitations and biases"
  },
  {
    "objectID": "slides/slides.html#final-verdict",
    "href": "slides/slides.html#final-verdict",
    "title": "Satellite and Population Embedding",
    "section": "Final Verdict",
    "text": "Final Verdict\nPowerful GeoAI tools, but use with caution and critical thinking!"
  },
  {
    "objectID": "slides/slides.html#references",
    "href": "slides/slides.html#references",
    "title": "Satellite and Population Embedding",
    "section": "References",
    "text": "References\n\nGoogle Research:\n\nGoogle PDFM Embeddings: github.com/google-research/population-dynamics\nSatellite Embeddings Dataset: developers.google.com/earth-engine/datasets/catalog/GOOGLE_SATELLITE_EMBEDDING_V1_ANNUAL\n\nTutorials & Resources:\n\nDr. Qiusheng Wu PDFM Tutorial: github.com/opengeos/GeoAI-Tutorials\nDr. Qiusheng Wu Earth Embedding Tutorial: leafmap.org/maplibre/AlphaEarth\nGoogle Earth Engine Tutorial: developers.google.com/earth-engine/tutorials/community/satellite-embedding-02-unsupervised-classification\n\nThis Presentation:\n\nGitHub Repository: github.com/zyang91/Google-Embedding-tutorial"
  },
  {
    "objectID": "pdfm/zillow_pdfm.html",
    "href": "pdfm/zillow_pdfm.html",
    "title": "Google Embeddings tutorial",
    "section": "",
    "text": "Code\nimport os\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom leafmap.common import evaluate_model, plot_actual_vs_predicted, download_file\n\n\n\n\nCode\nzhvi_file = \"/home/zyang91/Desktop/data/zillow_home_value_index_by_zipcode.csv\"\n\n\n\n\nCode\nzhvi_df = pd.read_csv(zhvi_file, dtype={\"RegionName\": str})\nzhvi_df.index = zhvi_df[\"RegionName\"].apply(lambda x: f\"zip/{x}\")\nzhvi_df\n\n\n\n\n\n\n\n\n\nRegionID\nSizeRank\nRegionName\nRegionType\nStateName\nState\nCity\nMetro\nCountyName\n2000-01-31\n...\n2024-04-30\n2024-05-31\n2024-06-30\n2024-07-31\n2024-08-31\n2024-09-30\n2024-10-31\n2024-11-30\n2024-12-31\n2025-01-31\n\n\nRegionName\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nzip/77494\n91982\n1\n77494\nzip\nTX\nTX\nKaty\nHouston-The Woodlands-Sugar Land, TX\nFort Bend County\n209050.47676\n...\n493768.79581\n495075.41384\n495380.40257\n495002.98333\n495408.56194\n496096.30546\n497215.16189\n497931.31997\n498348.02484\n498770.07052\n\n\nzip/8701\n61148\n2\n8701\nzip\nNJ\nNJ\nLakewood\nNew York-Newark-Jersey City, NY-NJ-PA\nOcean County\n129618.78060\n...\n567181.88952\n574111.68852\n579228.58585\n583825.79895\n588765.87771\n594583.48573\n599788.27507\n603106.03147\n605075.74933\n605701.71314\n\n\nzip/77449\n91940\n3\n77449\nzip\nTX\nTX\nKaty\nHouston-The Woodlands-Sugar Land, TX\nHarris County\n103655.52834\n...\n281613.08126\n282147.02210\n282107.28078\n281872.89042\n281691.18638\n281502.99185\n281086.41028\n280298.90222\n279570.22174\n278960.08768\n\n\nzip/11368\n62080\n4\n11368\nzip\nNY\nNY\nNew York\nNew York-Newark-Jersey City, NY-NJ-PA\nQueens County\n146323.41156\n...\n448237.17350\n452805.95427\n453500.45273\n452997.37976\n452371.99866\n453320.49579\n453075.34378\n451863.57197\n449627.30018\n447532.07593\n\n\nzip/77084\n91733\n5\n77084\nzip\nTX\nTX\nHouston\nHouston-The Woodlands-Sugar Land, TX\nHarris County\n102106.86183\n...\n274112.51755\n274613.19668\n274446.91817\n274155.37019\n273883.45917\n273631.25456\n273125.76564\n272528.81542\n272190.92108\n271949.29478\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nzip/14441\n63527\n39992\n14441\nzip\nNY\nNY\nDresden\nRochester, NY\nYates County\n95200.50699\n...\n207411.50108\n212859.34574\n217705.20709\n220747.04046\n223033.16078\n225156.69128\n227314.26864\n228544.60812\n228472.62049\n227382.44448\n\n\nzip/98628\n99927\n39992\n98628\nzip\nWA\nWA\nKlickitat\nNaN\nKlickitat County\nNaN\n...\n180804.48613\n183691.42860\n184378.49311\n182270.09823\n179856.66170\n177621.28838\n176436.41050\n175243.01948\n174289.08096\n172769.70567\n\n\nzip/52163\n80861\n39992\n52163\nzip\nIA\nIA\nProtivin\nNaN\nHoward County\nNaN\n...\n108590.53252\n110531.05868\n112546.78660\n114074.31279\n114923.34847\n114988.32175\n115144.24508\n115385.62968\n115883.51422\n116227.22666\n\n\nzip/82515\n93941\n39992\n82515\nzip\nWY\nWY\nHudson\nRiverton, WY\nFremont County\nNaN\n...\n172749.51473\n173795.26943\n174129.18080\n173601.28544\n173438.17253\n173265.88871\n173444.63429\n172971.96409\n172685.45419\n172487.20152\n\n\nzip/50160\n80190\n39992\n50160\nzip\nIA\nIA\nMartensdale\nDes Moines-West Des Moines, IA\nWarren County\nNaN\n...\n196175.58759\n197239.57154\n197434.12514\n197622.44778\n197875.01391\n198489.17993\n199001.79534\n199616.16038\n200645.25013\n201405.93792\n\n\n\n\n26323 rows × 310 columns\n\n\n\n\n\nCode\nembeddings_file = \"/home/zyang91/Desktop/us/zcta_embeddings.csv\"\n\n\n\n\nCode\nzipcode_embeddings = pd.read_csv(embeddings_file).set_index(\"place\")\nzipcode_embeddings\n\n\n\n\n\n\n\n\n\nstate\ncounty\ncity\npopulation\nlatitude\nlongitude\nfeature0\nfeature1\nfeature2\nfeature3\n...\nfeature320\nfeature321\nfeature322\nfeature323\nfeature324\nfeature325\nfeature326\nfeature327\nfeature328\nfeature329\n\n\nplace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nzip/97910\nOR\nMalheur County\nJordan Valley\n609\n42.749076\n-117.511459\n-0.138227\n1.120377\n0.072900\n0.297442\n...\n-1.588909e-01\n-0.168708\n1.231994\n-1.557645e-01\n3.043214\n-1.697491e-01\n0.177463\n-0.001661\n-1.010470e-03\n4.495589\n\n\nzip/89412\nNV\nWashoe County\nGerlach\n98\n41.102934\n-119.695361\n-0.141379\n1.422782\n0.234269\n0.159156\n...\n-1.574173e-01\n-0.043606\n2.788701\n-6.254692e-02\n3.700745\n-1.698268e-01\n-0.137990\n-0.024385\n-2.950600e-04\n3.399393\n\n\nzip/88030\nNM\nLuna County\nDeming\n24139\n32.191634\n-107.729431\n-0.046666\n1.414424\n0.146803\n1.113256\n...\n-6.540800e-04\n0.437475\n4.229295\n2.291990e-01\n2.098469\n1.150497e+00\n0.716122\n-0.116499\n-5.116325e-02\n3.866543\n\n\nzip/82633\nWY\nConverse County\nDouglas\n9478\n43.022270\n-105.410250\n-0.090293\n1.266280\n0.447868\n0.781861\n...\n-3.377113e-02\n0.579775\n2.688665\n1.756692e-01\n0.990921\n1.644879e+00\n0.222517\n-0.047864\n-4.237000e-05\n7.453567\n\n\nzip/59538\nMT\nPhillips County\nMalta\n2936\n48.112019\n-107.845520\n-0.092886\n1.256203\n-0.050897\n0.321954\n...\n-1.699154e-01\n-0.088829\n0.338914\n-1.029619e-01\n-0.156583\n1.493696e+00\n2.259007\n-0.161916\n-1.086910e-03\n0.972243\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nzip/43117\nOH\nPickaway County\nDerby\n69\n39.768789\n-83.206122\n-0.027339\n1.556422\n1.229264\n0.801588\n...\n-1.090080e-01\n-0.039277\n1.950797\n-1.548614e-01\n-0.163302\n-1.699533e-01\n1.940206\n1.456303\n-9.436400e-04\n2.706647\n\n\nzip/14302\nNY\nNiagara County\nNiagara Falls\n229\n43.093896\n-79.049193\n-0.081384\n1.241892\n0.655743\n0.431606\n...\n8.140615e-01\n-0.000713\n-0.117548\n-7.834878e-02\n1.176950\n-1.900440e-02\n0.445953\n-0.071082\n-3.293640e-03\n1.193913\n\n\nzip/10162\nNY\nNew York County\nNew York\n2268\n40.769298\n-73.949942\n-0.130655\n1.159695\n3.368129\n1.547286\n...\n-9.400000e-07\n-0.130648\n-0.000000\n-3.996429e-02\n-0.023050\n-2.800000e-07\n0.033541\n-0.000002\n-2.000000e-08\n-0.097251\n\n\nzip/80290\nCO\nDenver County\nDenver\n281\n39.744092\n-104.986754\n-0.112998\n0.355581\n3.924113\n3.203672\n...\n-5.011000e-05\n0.050413\n2.452633\n2.943200e+00\n0.056537\n1.590900e+00\n3.215226\n-0.002824\n-5.924400e-04\n4.557303\n\n\nzip/10279\nNY\nNew York County\nNew York\n131\n40.712626\n-74.008669\n-0.130601\n0.820977\n3.554522\n1.780694\n...\n-0.000000e+00\n-0.000002\n-0.000000\n-2.100000e-07\n-0.000002\n-0.000000e+00\n-0.016128\n-0.000000\n-1.000000e-08\n-0.000792\n\n\n\n\n32069 rows × 336 columns\n\n\n\n\n\nCode\ndata = zhvi_df.join(zipcode_embeddings, how=\"inner\")\ndata\n\n\n\n\n\n\n\n\n\nRegionID\nSizeRank\nRegionName\nRegionType\nStateName\nState\nCity\nMetro\nCountyName\n2000-01-31\n...\nfeature320\nfeature321\nfeature322\nfeature323\nfeature324\nfeature325\nfeature326\nfeature327\nfeature328\nfeature329\n\n\n\n\nzip/77494\n91982\n1\n77494\nzip\nTX\nTX\nKaty\nHouston-The Woodlands-Sugar Land, TX\nFort Bend County\n209050.47676\n...\n-0.000001\n-0.000573\n-7.384640e-02\n3.741291\n6.835684\n7.062005e+00\n2.521905\n1.494393\n-0.000000e+00\n0.663955\n\n\nzip/77449\n91940\n3\n77449\nzip\nTX\nTX\nKaty\nHouston-The Woodlands-Sugar Land, TX\nHarris County\n103655.52834\n...\n-0.017497\n-0.003990\n-1.646668e-01\n4.616399\n6.331781\n6.382573e+00\n2.943955\n1.990187\n-4.000000e-06\n1.199221\n\n\nzip/11368\n62080\n4\n11368\nzip\nNY\nNY\nNew York\nNew York-Newark-Jersey City, NY-NJ-PA\nQueens County\n146323.41156\n...\n-0.099274\n2.189546\n-2.500000e-07\n6.165315\n-0.082513\n-1.300000e-07\n3.876507\n-0.031210\n-4.438200e-04\n3.084769\n\n\nzip/77084\n91733\n5\n77084\nzip\nTX\nTX\nHouston\nHouston-The Woodlands-Sugar Land, TX\nHarris County\n102106.86183\n...\n-0.006604\n-0.015875\n-1.620866e-01\n4.832126\n6.007081\n6.243350e+00\n1.670585\n2.623777\n-7.000000e-08\n0.925346\n\n\nzip/79936\n93144\n6\n79936\nzip\nTX\nTX\nEl Paso\nEl Paso, TX\nEl Paso County\n88633.20026\n...\n2.817620\n3.308279\n1.424846e+00\n5.052125\n-0.169852\n-1.595640e-03\n0.101079\n-0.168736\n-4.000000e-08\n11.867829\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nzip/14441\n63527\n39992\n14441\nzip\nNY\nNY\nDresden\nRochester, NY\nYates County\n95200.50699\n...\n4.180083\n-0.131965\n1.830823e+00\n0.323147\n0.010833\n-9.629160e-03\n1.642928\n0.619273\n-1.592139e-02\n0.255313\n\n\nzip/98628\n99927\n39992\n98628\nzip\nWA\nWA\nKlickitat\nNaN\nKlickitat County\nNaN\n...\n-0.167128\n0.219471\n-1.258920e-03\n-0.017126\n4.365533\n4.186756e-01\n0.186192\n-0.163884\n-7.537420e-03\n1.982381\n\n\nzip/52163\n80861\n39992\n52163\nzip\nIA\nIA\nProtivin\nNaN\nHoward County\nNaN\n...\n-0.160310\n0.264810\n-1.492518e-01\n-0.099826\n0.856826\n-2.017140e-02\n9.899288\n-0.132805\n-2.782500e-04\n0.601016\n\n\nzip/82515\n93941\n39992\n82515\nzip\nWY\nWY\nHudson\nRiverton, WY\nFremont County\nNaN\n...\n0.308261\n0.603739\n3.155533e+00\n-0.080326\n1.294188\n8.093709e-01\n-0.147521\n-0.047723\n-1.597920e-03\n6.474327\n\n\nzip/50160\n80190\n39992\n50160\nzip\nIA\nIA\nMartensdale\nDes Moines-West Des Moines, IA\nWarren County\nNaN\n...\n-0.162361\n-0.149574\n1.953593e+00\n-0.001024\n1.201412\n-1.557630e-03\n2.875653\n-0.168282\n-4.259114e-02\n0.575394\n\n\n\n\n24003 rows × 646 columns\n\n\n\n\n\nCode\nembedding_features = [f\"feature{x}\" for x in range(330)]\nlabel = \"2024-10-31\"\n\n\n\n\nCode\ndata = data.dropna(subset=[label])\ndata\n\n\n\n\n\n\n\n\n\nRegionID\nSizeRank\nRegionName\nRegionType\nStateName\nState\nCity\nMetro\nCountyName\n2000-01-31\n...\nfeature320\nfeature321\nfeature322\nfeature323\nfeature324\nfeature325\nfeature326\nfeature327\nfeature328\nfeature329\n\n\n\n\nzip/77494\n91982\n1\n77494\nzip\nTX\nTX\nKaty\nHouston-The Woodlands-Sugar Land, TX\nFort Bend County\n209050.47676\n...\n-0.000001\n-0.000573\n-7.384640e-02\n3.741291\n6.835684\n7.062005e+00\n2.521905\n1.494393\n-0.000000e+00\n0.663955\n\n\nzip/77449\n91940\n3\n77449\nzip\nTX\nTX\nKaty\nHouston-The Woodlands-Sugar Land, TX\nHarris County\n103655.52834\n...\n-0.017497\n-0.003990\n-1.646668e-01\n4.616399\n6.331781\n6.382573e+00\n2.943955\n1.990187\n-4.000000e-06\n1.199221\n\n\nzip/11368\n62080\n4\n11368\nzip\nNY\nNY\nNew York\nNew York-Newark-Jersey City, NY-NJ-PA\nQueens County\n146323.41156\n...\n-0.099274\n2.189546\n-2.500000e-07\n6.165315\n-0.082513\n-1.300000e-07\n3.876507\n-0.031210\n-4.438200e-04\n3.084769\n\n\nzip/77084\n91733\n5\n77084\nzip\nTX\nTX\nHouston\nHouston-The Woodlands-Sugar Land, TX\nHarris County\n102106.86183\n...\n-0.006604\n-0.015875\n-1.620866e-01\n4.832126\n6.007081\n6.243350e+00\n1.670585\n2.623777\n-7.000000e-08\n0.925346\n\n\nzip/79936\n93144\n6\n79936\nzip\nTX\nTX\nEl Paso\nEl Paso, TX\nEl Paso County\n88633.20026\n...\n2.817620\n3.308279\n1.424846e+00\n5.052125\n-0.169852\n-1.595640e-03\n0.101079\n-0.168736\n-4.000000e-08\n11.867829\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nzip/14441\n63527\n39992\n14441\nzip\nNY\nNY\nDresden\nRochester, NY\nYates County\n95200.50699\n...\n4.180083\n-0.131965\n1.830823e+00\n0.323147\n0.010833\n-9.629160e-03\n1.642928\n0.619273\n-1.592139e-02\n0.255313\n\n\nzip/98628\n99927\n39992\n98628\nzip\nWA\nWA\nKlickitat\nNaN\nKlickitat County\nNaN\n...\n-0.167128\n0.219471\n-1.258920e-03\n-0.017126\n4.365533\n4.186756e-01\n0.186192\n-0.163884\n-7.537420e-03\n1.982381\n\n\nzip/52163\n80861\n39992\n52163\nzip\nIA\nIA\nProtivin\nNaN\nHoward County\nNaN\n...\n-0.160310\n0.264810\n-1.492518e-01\n-0.099826\n0.856826\n-2.017140e-02\n9.899288\n-0.132805\n-2.782500e-04\n0.601016\n\n\nzip/82515\n93941\n39992\n82515\nzip\nWY\nWY\nHudson\nRiverton, WY\nFremont County\nNaN\n...\n0.308261\n0.603739\n3.155533e+00\n-0.080326\n1.294188\n8.093709e-01\n-0.147521\n-0.047723\n-1.597920e-03\n6.474327\n\n\nzip/50160\n80190\n39992\n50160\nzip\nIA\nIA\nMartensdale\nDes Moines-West Des Moines, IA\nWarren County\nNaN\n...\n-0.162361\n-0.149574\n1.953593e+00\n-0.001024\n1.201412\n-1.557630e-03\n2.875653\n-0.168282\n-4.259114e-02\n0.575394\n\n\n\n\n24002 rows × 646 columns\n\n\n\n\n\nCode\ndata = data[embedding_features + [label]]\nX = data[embedding_features]\ny = data[label]\n\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, random_state=42\n)\n\n\n\n\nCode\n# Initialize and train a simple linear regression model\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# Make predictions\ny_pred = model.predict(X_test)\n\n\n\n\nCode\nevaluation_df = pd.DataFrame({\"y\": y_test, \"y_pred\": y_pred})\nmetrics = evaluate_model(evaluation_df)\nprint(metrics)\n\n\n{'r2': 0.7923863392335829, 'r': np.float64(0.890846915263462), 'rmse': 131888.38743343446, 'mae': 72573.83922121955, 'mape': 0.26673190601469865}\n\n\n\n\nCode\nxy_lim = (0, 3_000_000)\nplot_actual_vs_predicted(\n    evaluation_df,\n    xlim=xy_lim,\n    ylim=xy_lim,\n    title=\"Actual vs Predicted Home Values\",\n    x_label=\"Actual Home Value\",\n    y_label=\"Predicted Home Value\",\n)\n\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n\n\nCode\nevaluate_df = pd.DataFrame({\"y\": y_test, \"y_pred\": y_pred})\nmetrics = evaluate_model(evaluate_df)\nprint(metrics)\n\n\n{'r2': 0.7923863392335829, 'r': np.float64(0.890846915263462), 'rmse': 131888.38743343446, 'mae': 72573.83922121955, 'mape': 0.26673190601469865}\n\n\n\n\nCode\nevaluate_df.head()\n\n\n\n\n\n\n\n\n\ny\ny_pred\n\n\n\n\nzip/62943\n162222.55793\n204549.127895\n\n\nzip/63653\n72232.23067\n23479.718488\n\n\nzip/64117\n199195.44126\n156224.812811\n\n\nzip/74931\n150131.29134\n243551.452823\n\n\nzip/98168\n558843.92154\n494979.367988\n\n\n\n\n\n\n\n\n\nCode\nxy_lim = (0, 3000000)\nplot_actual_vs_predicted(\n    evaluate_df,\n    x_label=\"Actual\",\n    y_label=\"Predicted\",\n    xlim=xy_lim,\n    ylim=xy_lim,\n    title=\"Actual vs Predicted ZHVI\",\n)\n\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n\n\nCode\nk = 5\nknn_model = KNeighborsRegressor(n_neighbors=k)\nknn_model.fit(X_train, y_train)\ny_pred = knn_model.predict(X_test)\n\n\n\n\nCode\nplot_actual_vs_predicted(\n    evaluate_df,\n    x_label=\"Actual\",\n    y_label=\"Predicted\",\n    xlim=xy_lim,\n    ylim=xy_lim,\n    title=f\"Actual vs Predicted ZHVI (KNN, k={k})\",\n)\n\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n\n\nCode\nevaluation_df = pd.DataFrame({\"y\": y_test, \"y_pred\": y_pred})\nmetrics = evaluate_model(evaluation_df)\nprint(metrics)\n\n\n{'r2': 0.787670314194312, 'r': np.float64(0.8889091262880304), 'rmse': 133377.92408499756, 'mae': 60408.591463699224, 'mape': 0.2067017807110204}"
  },
  {
    "objectID": "pdfm/zillow_pdfm_visu.html",
    "href": "pdfm/zillow_pdfm_visu.html",
    "title": "Google Embeddings tutorial",
    "section": "",
    "text": "Code\nimport os\nimport pandas as pd\nimport geopandas as gpd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom leafmap.common import evaluate_model, plot_actual_vs_predicted, download_file\nimport leafmap.maplibregl as leafmap\n\n\n\n\nCode\nzhvi = \"https://github.com/opengeos/datasets/releases/download/us/zillow_home_value_index_by_county.csv\"\nzhvo_file = \"zillow_home_value_index_by_county.csv\"\nif not os.path.exists(zhvo_file):\n    download_file(zhvi, zhvo_file)\n\n\n\n\nCode\nzhvi_df = pd.read_csv(zhvo_file, dtype={\"StateCodeFIPS\": str, \"MunicipalCodeFIPS\": str})\nzhvi_df.index = \"geoId/\" + zhvi_df[\"StateCodeFIPS\"] + zhvi_df[\"MunicipalCodeFIPS\"]\nzhvi_df.head()\n\n\n\n\n\n\n\n\n\nRegionID\nSizeRank\nRegionName\nRegionType\nStateName\nState\nMetro\nStateCodeFIPS\nMunicipalCodeFIPS\n2000-01-31\n...\n2024-04-30\n2024-05-31\n2024-06-30\n2024-07-31\n2024-08-31\n2024-09-30\n2024-10-31\n2024-11-30\n2024-12-31\n2025-01-31\n\n\n\n\ngeoId/06037\n3101\n0\nLos Angeles County\ncounty\nCA\nCA\nLos Angeles-Long Beach-Anaheim, CA\n06\n037\n206685.940073\n...\n848100.109098\n851249.814267\n853328.259951\n856958.247702\n862129.887015\n868712.125738\n873819.306305\n877921.805494\n881313.863788\n880547.372613\n\n\ngeoId/17031\n139\n1\nCook County\ncounty\nIL\nIL\nChicago-Naperville-Elgin, IL-IN-WI\n17\n031\n145737.060609\n...\n297797.137247\n299609.927472\n300652.787054\n301303.254592\n302118.600852\n302781.699599\n303133.869223\n303523.016515\n304181.858348\n305000.265124\n\n\ngeoId/48201\n1090\n2\nHarris County\ncounty\nTX\nTX\nHouston-The Woodlands-Sugar Land, TX\n48\n201\n109327.540062\n...\n282689.212331\n283279.667076\n283161.721769\n282792.559444\n282454.169156\n282239.614216\n281873.680565\n281423.466788\n281191.554410\n281000.895149\n\n\ngeoId/04013\n2402\n3\nMaricopa County\ncounty\nAZ\nAZ\nPhoenix-Mesa-Chandler, AZ\n04\n013\n142829.577207\n...\n467600.239765\n468996.512594\n469164.401050\n468562.421846\n467451.263586\n466509.197532\n465782.610071\n465120.188374\n464544.544452\n463613.340231\n\n\ngeoId/06073\n2841\n4\nSan Diego County\ncounty\nCA\nCA\nSan Diego-Chula Vista-Carlsbad, CA\n06\n073\n212384.876155\n...\n918694.464981\n927384.144048\n931835.812500\n933267.733074\n932833.552309\n932389.735948\n931683.464702\n931874.623336\n932380.083872\n932486.305190\n\n\n\n\n5 rows × 310 columns\n\n\n\n\n\nCode\ncounty_geojson = \"/home/zyang91/Desktop/us/county.geojson\"\n\n\n\n\nCode\ncounty_gdf = gpd.read_file(county_geojson)\ncounty_gdf.set_index(\"place\", inplace=True)\ncounty_gdf.head()\n\n\n\n\n\n\n\n\n\nindex\ngeometry\n\n\nplace\n\n\n\n\n\n\ngeoId/29510\n0\nPOLYGON ((-90.31662 38.60398, -90.32008 38.593...\n\n\ngeoId/32510\n1\nPOLYGON ((-120.00431 39.16561, -120.00297 39.1...\n\n\ngeoId/51580\n2\nPOLYGON ((-80.00796 37.76462, -80.0085 37.7611...\n\n\ngeoId/51530\n3\nPOLYGON ((-79.38112 37.74236, -79.38063 37.740...\n\n\ngeoId/51678\n4\nPOLYGON ((-79.45401 37.79249, -79.46155 37.785...\n\n\n\n\n\n\n\n\n\nCode\ndf = zhvi_df.join(county_gdf)\ndf\n\n\n\n\n\n\n\n\n\nRegionID\nSizeRank\nRegionName\nRegionType\nStateName\nState\nMetro\nStateCodeFIPS\nMunicipalCodeFIPS\n2000-01-31\n...\n2024-06-30\n2024-07-31\n2024-08-31\n2024-09-30\n2024-10-31\n2024-11-30\n2024-12-31\n2025-01-31\nindex\ngeometry\n\n\n\n\ngeoId/06037\n3101\n0\nLos Angeles County\ncounty\nCA\nCA\nLos Angeles-Long Beach-Anaheim, CA\n06\n037\n206685.940073\n...\n853328.259951\n856958.247702\n862129.887015\n868712.125738\n873819.306305\n877921.805494\n881313.863788\n880547.372613\n218.0\nMULTIPOLYGON (((-118.67855 33.02634, -118.6748...\n\n\ngeoId/17031\n139\n1\nCook County\ncounty\nIL\nIL\nChicago-Naperville-Elgin, IL-IN-WI\n17\n031\n145737.060609\n...\n300652.787054\n301303.254592\n302118.600852\n302781.699599\n303133.869223\n303523.016515\n304181.858348\n305000.265124\n635.0\nPOLYGON ((-88.26308 42.06686, -88.26272 41.986...\n\n\ngeoId/48201\n1090\n2\nHarris County\ncounty\nTX\nTX\nHouston-The Woodlands-Sugar Land, TX\n48\n201\n109327.540062\n...\n283161.721769\n282792.559444\n282454.169156\n282239.614216\n281873.680565\n281423.466788\n281191.554410\n281000.895149\n2362.0\nPOLYGON ((-95.96052 30.16368, -95.92658 30.068...\n\n\ngeoId/04013\n2402\n3\nMaricopa County\ncounty\nAZ\nAZ\nPhoenix-Mesa-Chandler, AZ\n04\n013\n142829.577207\n...\n469164.401050\n468562.421846\n467451.263586\n466509.197532\n465782.610071\n465120.188374\n464544.544452\n463613.340231\n88.0\nPOLYGON ((-113.33376 33.99923, -113.33389 32.5...\n\n\ngeoId/06073\n2841\n4\nSan Diego County\ncounty\nCA\nCA\nSan Diego-Chula Vista-Carlsbad, CA\n06\n073\n212384.876155\n...\n931835.812500\n933267.733074\n932833.552309\n932389.735948\n931683.464702\n931874.623336\n932380.083872\n932486.305190\n212.0\nPOLYGON ((-117.61109 33.33401, -117.57155 33.3...\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\ngeoId/31007\n846\n3206\nBanner County\ncounty\nNE\nNE\nScottsbluff, NE\n31\n007\nNaN\n...\n321838.022818\n323894.525181\n330340.241603\n340048.056447\n348255.690352\n351834.125302\n356282.247220\n361271.153620\n1577.0\nPOLYGON ((-104.0527 41.69797, -104.0523 41.393...\n\n\ngeoId/49009\n1648\n3207\nDaggett County\ncounty\nUT\nUT\nNaN\n49\n009\nNaN\n...\n308761.377915\n306617.625821\n306556.018166\n308889.348086\n313334.046432\n316926.936602\n320636.922888\n323907.317207\n2519.0\nPOLYGON ((-110.00028 40.81368, -109.99332 40.8...\n\n\ngeoId/31171\n1432\n3208\nThomas County\ncounty\nNE\nNE\nNaN\n31\n171\nNaN\n...\n160305.518515\n160113.204884\n160637.460741\n161362.378182\n162603.377093\n162802.298298\n162976.347349\n162721.311102\n1586.0\nPOLYGON ((-100.84611 42.08818, -100.84436 41.9...\n\n\ngeoId/31117\n2794\n3212\nMcPherson County\ncounty\nNE\nNE\nNorth Platte, NE\n31\n117\nNaN\n...\n288823.914423\n291261.158616\n298216.019609\n308135.413909\n317357.571317\n322473.200324\n328341.338278\n331465.598015\n1574.0\nPOLYGON ((-101.40612 41.74321, -101.40724 41.3...\n\n\ngeoId/30069\n2825\n3214\nPetroleum County\ncounty\nMT\nMT\nNaN\n30\n069\nNaN\n...\n186905.628454\n186885.190954\n188831.845652\n191958.311933\n196730.120070\n200622.782446\n205937.339516\n210134.086763\n1527.0\nPOLYGON ((-108.73686 47.09823, -108.60894 47.0...\n\n\n\n\n3073 rows × 312 columns\n\n\n\n\n\nCode\nzhvi_gdf = gpd.GeoDataFrame(df, geometry=\"geometry\")\nzhvi_gdf.head()\n\n\n\n\n\n\n\n\n\nRegionID\nSizeRank\nRegionName\nRegionType\nStateName\nState\nMetro\nStateCodeFIPS\nMunicipalCodeFIPS\n2000-01-31\n...\n2024-06-30\n2024-07-31\n2024-08-31\n2024-09-30\n2024-10-31\n2024-11-30\n2024-12-31\n2025-01-31\nindex\ngeometry\n\n\n\n\ngeoId/06037\n3101\n0\nLos Angeles County\ncounty\nCA\nCA\nLos Angeles-Long Beach-Anaheim, CA\n06\n037\n206685.940073\n...\n853328.259951\n856958.247702\n862129.887015\n868712.125738\n873819.306305\n877921.805494\n881313.863788\n880547.372613\n218.0\nMULTIPOLYGON (((-118.67855 33.02634, -118.6748...\n\n\ngeoId/17031\n139\n1\nCook County\ncounty\nIL\nIL\nChicago-Naperville-Elgin, IL-IN-WI\n17\n031\n145737.060609\n...\n300652.787054\n301303.254592\n302118.600852\n302781.699599\n303133.869223\n303523.016515\n304181.858348\n305000.265124\n635.0\nPOLYGON ((-88.26308 42.06686, -88.26272 41.986...\n\n\ngeoId/48201\n1090\n2\nHarris County\ncounty\nTX\nTX\nHouston-The Woodlands-Sugar Land, TX\n48\n201\n109327.540062\n...\n283161.721769\n282792.559444\n282454.169156\n282239.614216\n281873.680565\n281423.466788\n281191.554410\n281000.895149\n2362.0\nPOLYGON ((-95.96052 30.16368, -95.92658 30.068...\n\n\ngeoId/04013\n2402\n3\nMaricopa County\ncounty\nAZ\nAZ\nPhoenix-Mesa-Chandler, AZ\n04\n013\n142829.577207\n...\n469164.401050\n468562.421846\n467451.263586\n466509.197532\n465782.610071\n465120.188374\n464544.544452\n463613.340231\n88.0\nPOLYGON ((-113.33376 33.99923, -113.33389 32.5...\n\n\ngeoId/06073\n2841\n4\nSan Diego County\ncounty\nCA\nCA\nSan Diego-Chula Vista-Carlsbad, CA\n06\n073\n212384.876155\n...\n931835.812500\n933267.733074\n932833.552309\n932389.735948\n931683.464702\n931874.623336\n932380.083872\n932486.305190\n212.0\nPOLYGON ((-117.61109 33.33401, -117.57155 33.3...\n\n\n\n\n5 rows × 312 columns\n\n\n\n\n\nCode\ncolumn = \"2024-10-31\"\ngdf = zhvi_gdf[[\"RegionName\", \"State\", column, \"geometry\"]]\ngdf.head()\n\n\n\n\n\n\n\n\n\nRegionName\nState\n2024-10-31\ngeometry\n\n\n\n\ngeoId/06037\nLos Angeles County\nCA\n873819.306305\nMULTIPOLYGON (((-118.67855 33.02634, -118.6748...\n\n\ngeoId/17031\nCook County\nIL\n303133.869223\nPOLYGON ((-88.26308 42.06686, -88.26272 41.986...\n\n\ngeoId/48201\nHarris County\nTX\n281873.680565\nPOLYGON ((-95.96052 30.16368, -95.92658 30.068...\n\n\ngeoId/04013\nMaricopa County\nAZ\n465782.610071\nPOLYGON ((-113.33376 33.99923, -113.33389 32.5...\n\n\ngeoId/06073\nSan Diego County\nCA\n931683.464702\nPOLYGON ((-117.61109 33.33401, -117.57155 33.3...\n\n\n\n\n\n\n\n\n\nCode\nm = leafmap.Map(style=\"liberty\")\nm.add_data(\n    gdf,\n    cmap=\"Blues\",\n    column=column,\n    legend_title=\"Zillow Home Median Home Value\",\n    name=\"Zillow Home Median Home Value\",\n)\nm.add_layer_control()\nm\n\n\n\n\n\n\n\nCode\nm = leafmap.Map(style=\"liberty\", pitch=60)\nm.add_data(\n    gdf,\n    cmap=\"Blues\",\n    column=column,\n    extrude=True,\n    scale_factor=3,\n    legend_title=\"Zillow Home Median Home Value\",\n    name=\"Zillow Home Median Home Value\",\n)\nm.add_layer_control()\nm\n\n\n\n\n\n\n\nCode\nembeddings = pd.read_csv(\"/home/zyang91/Desktop/us/county_embeddings.csv\").set_index(\n    \"place\"\n)\nembeddings.head()\n\n\n\n\n\n\n\n\n\nstate\ncounty\npopulation\nlatitude\nlongitude\nfeature0\nfeature1\nfeature2\nfeature3\nfeature4\n...\nfeature320\nfeature321\nfeature322\nfeature323\nfeature324\nfeature325\nfeature326\nfeature327\nfeature328\nfeature329\n\n\nplace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngeoId/01001\nAL\nAutauga County\n58761\n32.532237\n-86.646439\n-0.059204\n1.153834\n0.286746\n0.324178\n1.003599\n...\n-0.059415\n-0.165617\n0.816348\n-0.167234\n2.099072\n-0.168644\n1.155944\n1.620912\n-0.089127\n4.831956\n\n\ngeoId/01003\nAL\nBaldwin County\n233420\n30.659218\n-87.746067\n-0.089298\n0.710666\n0.358453\n1.138983\n2.012795\n...\n-0.167371\n0.049021\n0.892724\n-0.061048\n2.791007\n-0.166232\n0.276117\n2.892894\n-0.128016\n4.151655\n\n\ngeoId/01005\nAL\nBarbour County\n24877\n31.870253\n-85.405103\n-0.089458\n1.756277\n0.749515\n0.796651\n0.555815\n...\n-0.110057\n-0.013691\n0.346536\n-0.106772\n2.986117\n-0.104402\n-0.059600\n1.893656\n-0.147867\n0.032731\n\n\ngeoId/01007\nAL\nBibb County\n22251\n33.015893\n-87.127148\n-0.117877\n0.725561\n0.436291\n0.307150\n1.347822\n...\n-0.169970\n-0.168179\n1.796390\n-0.128314\n1.395750\n-0.084409\n3.489884\n1.249768\n-0.028330\n4.688914\n\n\ngeoId/01009\nAL\nBlount County\n59077\n33.977357\n-86.566440\n-0.133150\n0.648858\n0.592053\n0.382824\n1.486730\n...\n-0.167436\n0.689164\n2.527887\n-0.045288\n0.530547\n-0.156357\n1.227069\n1.439654\n-0.045479\n3.491446\n\n\n\n\n5 rows × 335 columns\n\n\n\n\n\nCode\ndf = embeddings.join(county_gdf)\n\n\n\n\nCode\nembeddings_gdf = gpd.GeoDataFrame(df, geometry=\"geometry\")\nembeddings_gdf.head()\n\n\n\n\n\n\n\n\n\nstate\ncounty\npopulation\nlatitude\nlongitude\nfeature0\nfeature1\nfeature2\nfeature3\nfeature4\n...\nfeature322\nfeature323\nfeature324\nfeature325\nfeature326\nfeature327\nfeature328\nfeature329\nindex\ngeometry\n\n\nplace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngeoId/01001\nAL\nAutauga County\n58761\n32.532237\n-86.646439\n-0.059204\n1.153834\n0.286746\n0.324178\n1.003599\n...\n0.816348\n-0.167234\n2.099072\n-0.168644\n1.155944\n1.620912\n-0.089127\n4.831956\n56\nPOLYGON ((-86.91743 32.66417, -86.9212 32.6565...\n\n\ngeoId/01003\nAL\nBaldwin County\n233420\n30.659218\n-87.746067\n-0.089298\n0.710666\n0.358453\n1.138983\n2.012795\n...\n0.892724\n-0.061048\n2.791007\n-0.166232\n0.276117\n2.892894\n-0.128016\n4.151655\n64\nMULTIPOLYGON (((-87.44728 30.51503, -87.44562 ...\n\n\ngeoId/01005\nAL\nBarbour County\n24877\n31.870253\n-85.405103\n-0.089458\n1.756277\n0.749515\n0.796651\n0.555815\n...\n0.346536\n-0.106772\n2.986117\n-0.104402\n-0.059600\n1.893656\n-0.147867\n0.032731\n51\nPOLYGON ((-85.74827 31.61803, -85.54881 31.618...\n\n\ngeoId/01007\nAL\nBibb County\n22251\n33.015893\n-87.127148\n-0.117877\n0.725561\n0.436291\n0.307150\n1.347822\n...\n1.796390\n-0.128314\n1.395750\n-0.084409\n3.489884\n1.249768\n-0.028330\n4.688914\n20\nPOLYGON ((-87.42192 33.0034, -87.42075 32.8846...\n\n\ngeoId/01009\nAL\nBlount County\n59077\n33.977357\n-86.566440\n-0.133150\n0.648858\n0.592053\n0.382824\n1.486730\n...\n2.527887\n-0.045288\n0.530547\n-0.156357\n1.227069\n1.439654\n-0.045479\n3.491446\n15\nPOLYGON ((-86.96227 33.85816, -86.96294 33.844...\n\n\n\n\n5 rows × 337 columns\n\n\n\n\n\nCode\ncolumn = \"feature329\"\ngdf = embeddings_gdf[[\"state\", column, \"geometry\"]]\ngdf.head()\n\n\n\n\n\n\n\n\n\nstate\nfeature329\ngeometry\n\n\nplace\n\n\n\n\n\n\n\ngeoId/01001\nAL\n4.831956\nPOLYGON ((-86.91743 32.66417, -86.9212 32.6565...\n\n\ngeoId/01003\nAL\n4.151655\nMULTIPOLYGON (((-87.44728 30.51503, -87.44562 ...\n\n\ngeoId/01005\nAL\n0.032731\nPOLYGON ((-85.74827 31.61803, -85.54881 31.618...\n\n\ngeoId/01007\nAL\n4.688914\nPOLYGON ((-87.42192 33.0034, -87.42075 32.8846...\n\n\ngeoId/01009\nAL\n3.491446\nPOLYGON ((-86.96227 33.85816, -86.96294 33.844...\n\n\n\n\n\n\n\n\n\nCode\nm = leafmap.Map(style=\"liberty\")\nm.add_data(\n    gdf,\n    cmap=\"Blues\",\n    column=column,\n    legend_title=column,\n    name=column,\n)\nm.add_layer_control()\nm\n\n\n\n\n\n\n\nCode\nm = leafmap.Map(style=\"liberty\", pitch=60)\nm.add_data(\n    gdf,\n    cmap=\"Blues\",\n    column=column,\n    extrude=True,\n    scale_factor=0.00005,\n    legend_title=column,\n    name=column,\n)\nm.add_layer_control()\nm\n\n\n\n\n\n\n\nCode\ndata = zhvi_df.join(embeddings, how=\"inner\")\ndata.head()\n\n\n\n\n\n\n\n\n\nRegionID\nSizeRank\nRegionName\nRegionType\nStateName\nState\nMetro\nStateCodeFIPS\nMunicipalCodeFIPS\n2000-01-31\n...\nfeature320\nfeature321\nfeature322\nfeature323\nfeature324\nfeature325\nfeature326\nfeature327\nfeature328\nfeature329\n\n\n\n\ngeoId/06037\n3101\n0\nLos Angeles County\ncounty\nCA\nCA\nLos Angeles-Long Beach-Anaheim, CA\n06\n037\n206685.940073\n...\n-7.000000e-08\n-0.001461\n-0.035212\n1.910339\n-0.147769\n0.003667\n-0.164598\n-0.000012\n-0.000000\n1.520711\n\n\ngeoId/17031\n139\n1\nCook County\ncounty\nIL\nIL\nChicago-Naperville-Elgin, IL-IN-WI\n17\n031\n145737.060609\n...\n-7.855540e-02\n-0.160230\n2.425814\n-0.048814\n-0.038273\n-0.084591\n2.993729\n2.485846\n-0.000042\n2.314278\n\n\ngeoId/48201\n1090\n2\nHarris County\ncounty\nTX\nTX\nHouston-The Woodlands-Sugar Land, TX\n48\n201\n109327.540062\n...\n-3.441770e-02\n-0.008643\n-0.157201\n2.186765\n5.300742\n6.407553\n0.975400\n3.072631\n-0.000006\n1.600721\n\n\ngeoId/04013\n2402\n3\nMaricopa County\ncounty\nAZ\nAZ\nPhoenix-Mesa-Chandler, AZ\n04\n013\n142829.577207\n...\n-1.682885e-01\n-0.099206\n4.709348\n0.263209\n0.575408\n4.380611\n6.630384\n-0.166023\n-0.000919\n3.876134\n\n\ngeoId/06073\n2841\n4\nSan Diego County\ncounty\nCA\nCA\nSan Diego-Chula Vista-Carlsbad, CA\n06\n073\n212384.876155\n...\n-2.194900e-04\n-0.000305\n0.408058\n0.252055\n-0.164628\n0.019952\n2.901626\n-0.000021\n-0.000002\n0.716236\n\n\n\n\n5 rows × 645 columns\n\n\n\n\n\nCode\nembedding_features = [f\"feature{i}\" for i in range(330)]\nlabel = \"2024-10-31\"\n\n\n\n\nCode\ndata = data.dropna(subset=[label])\n\n\n\n\nCode\ndata = data[embedding_features + [label]]\nx = data[embedding_features]\ny = data[label]\nx_train, x_test, y_train, y_test = train_test_split(\n    x, y, test_size=0.2, random_state=42\n)\n\n\n\n\nCode\nmodel = LinearRegression()\nmodel.fit(x_train, y_train)\ny_pred = model.predict(x_test)\n\n\n\n\nCode\nevaluation_df = pd.DataFrame({\"y\": y_test, \"y_pred\": y_pred})\nmetrics = evaluate_model(evaluation_df)\nprint(metrics)\n\n\n{'r2': 0.8269914580761699, 'r': np.float64(0.9125487145276073), 'rmse': 61093.7358171606, 'mae': 43101.94549189267, 'mape': 0.1957361870440549}\n\n\n\n\nCode\nxy_lim = (0, 1000000)\nplot_actual_vs_predicted(\n    evaluation_df,\n    xlim=xy_lim,\n    ylim=xy_lim,\n    title=\"Linear Regression: Actual vs Predicted\",\n    x_label=\"Actual Home Value\",\n    y_label=\"Predicted Home Value\",\n)\n\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n\n\nCode\ndf = evaluation_df.join(gdf)\ndf[\"difference\"] = df[\"y\"] - df[\"y_pred\"]\n\n\n\n\nCode\ndf.head()\n\n\n\n\n\n\n\n\n\ny\ny_pred\nstate\nfeature329\ngeometry\ncategory\ncolor\ndifference\n\n\n\n\ngeoId/34017\n598888.295081\n776849.887625\nNJ\n-6.000000e-08\nPOLYGON ((-74.16456 40.75596, -74.1651 40.7427...\n1\n#f7fbff\n-177961.592544\n\n\ngeoId/48411\n192620.109978\n180320.802383\nTX\n1.929096e-01\nPOLYGON ((-99.09189 30.92198, -98.72061 30.921...\n1\n#f7fbff\n12299.307595\n\n\ngeoId/21137\n170778.967173\n259197.493542\nKY\n3.470986e+00\nMULTIPOLYGON (((-84.74777 37.58648, -84.74418 ...\n4\n#2171b5\n-88418.526369\n\n\ngeoId/55007\n275854.538422\n300917.601055\nWI\n2.753146e+00\nPOLYGON ((-91.54939 46.89321, -91.55343 46.502...\n4\n#2171b5\n-25063.062633\n\n\ngeoId/22081\n120883.872924\n76727.777705\nLA\n1.799954e+00\nMULTIPOLYGON (((-93.15244 32.00524, -93.15168 ...\n3\n#6baed6\n44156.095219\n\n\n\n\n\n\n\n\n\nCode\ngdf = gpd.GeoDataFrame(df, geometry=\"geometry\")\ngdf.head()\n\n\n\n\n\n\n\n\n\ny\ny_pred\nstate\nfeature329\ngeometry\ncategory\ncolor\ndifference\n\n\n\n\ngeoId/34017\n598888.295081\n776849.887625\nNJ\n-6.000000e-08\nPOLYGON ((-74.16456 40.75596, -74.1651 40.7427...\n1\n#f7fbff\n-177961.592544\n\n\ngeoId/48411\n192620.109978\n180320.802383\nTX\n1.929096e-01\nPOLYGON ((-99.09189 30.92198, -98.72061 30.921...\n1\n#f7fbff\n12299.307595\n\n\ngeoId/21137\n170778.967173\n259197.493542\nKY\n3.470986e+00\nMULTIPOLYGON (((-84.74777 37.58648, -84.74418 ...\n4\n#2171b5\n-88418.526369\n\n\ngeoId/55007\n275854.538422\n300917.601055\nWI\n2.753146e+00\nPOLYGON ((-91.54939 46.89321, -91.55343 46.502...\n4\n#2171b5\n-25063.062633\n\n\ngeoId/22081\n120883.872924\n76727.777705\nLA\n1.799954e+00\nMULTIPOLYGON (((-93.15244 32.00524, -93.15168 ...\n3\n#6baed6\n44156.095219\n\n\n\n\n\n\n\n\n\nCode\ngdf.drop(columns=[\"category\", \"color\", column], inplace=True)\ngdf.head()\n\n\n\n\n\n\n\n\n\ny\ny_pred\nstate\ngeometry\ndifference\n\n\n\n\ngeoId/34017\n598888.295081\n776849.887625\nNJ\nPOLYGON ((-74.16456 40.75596, -74.1651 40.7427...\n-177961.592544\n\n\ngeoId/48411\n192620.109978\n180320.802383\nTX\nPOLYGON ((-99.09189 30.92198, -98.72061 30.921...\n12299.307595\n\n\ngeoId/21137\n170778.967173\n259197.493542\nKY\nMULTIPOLYGON (((-84.74777 37.58648, -84.74418 ...\n-88418.526369\n\n\ngeoId/55007\n275854.538422\n300917.601055\nWI\nPOLYGON ((-91.54939 46.89321, -91.55343 46.502...\n-25063.062633\n\n\ngeoId/22081\n120883.872924\n76727.777705\nLA\nMULTIPOLYGON (((-93.15244 32.00524, -93.15168 ...\n44156.095219\n\n\n\n\n\n\n\n\n\nCode\nm = leafmap.Map(style=\"liberty\")\nm.add_data(\n    gdf,\n    cmap=\"Blues\",\n    column=\"difference\",\n    legend_title=\"Difference (Actual - Predicted)\",\n    name=\"Difference\",\n)\nm.add_layer_control()\nm"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Google Embeddings tutorial",
    "section": "",
    "text": "Author: Zhanchao Yang"
  },
  {
    "objectID": "index.html#gis-day-lightning-talk-for-the-university-of-pennsylvania",
    "href": "index.html#gis-day-lightning-talk-for-the-university-of-pennsylvania",
    "title": "Google Embeddings tutorial",
    "section": "GIS day lightning talk for the University of Pennsylvania",
    "text": "GIS day lightning talk for the University of Pennsylvania\n11.19.2025\n\nTopic\nSatellite and Population Embeddings: Powerful GeoAI Tools or Overrated? ### Abstract\nIn recent years, Google has introduced two powerful embedding for spatial analysis: satellite imagery embeddings, which capture visual and environmental patterns from overhead imagery, and population embeddings, which encode demographic and mobility information at high spatial resolutions. These embeddings promise to make geospatial machine learning more scalable, flexible, and transferable, but do they deliver? This talk will begin with an introduction to both embedding types, representation, and the types of spatial signals they capture. A short live demo will walk through two practical use cases: land use classification and estimating housing prices using these embeddings as inputs. These examples will illustrate the potential of embedding-based GeoAI to outperform traditional feature engineering. However, the talk will also highlight critical limitations: the opacity of learned representations, challenges in interpretability and validation, and the risk of reinforcing spatial and social biases. By the end, attendees will gain a clear understanding of both the capabilities and caveats of these embeddings, and when (or whether) they should be trusted in decision-making contexts."
  },
  {
    "objectID": "index.html#type-of-embedding",
    "href": "index.html#type-of-embedding",
    "title": "Google Embeddings tutorial",
    "section": "Type of Embedding",
    "text": "Type of Embedding\n\nPDFM Embedding\nGoogle Earth Embedding\n\nCredit: - Dr. Qiusheng Wu PDFM tutorial - Dr. Qiusheng Wu Google Earth Embedding tutorial - Google official JavaScript Satellite Embedding tutorial - Google PDFM Embedding - Google Earth Satellite Embedding\nALL Exert or modify from original Repo, all rights reserved to the original author!"
  },
  {
    "objectID": "index.html#population-dynamics-foundation-model-pdfm-embeddings",
    "href": "index.html#population-dynamics-foundation-model-pdfm-embeddings",
    "title": "Google Embeddings tutorial",
    "section": "Population Dynamics Foundation Model (PDFM) Embeddings",
    "text": "Population Dynamics Foundation Model (PDFM) Embeddings\nPDFM Embeddings are condensed vector representations designed to encapsulate the complex, multidimensional interactions among human behaviors, environmental factors, and local contexts at specific locations. These embeddings capture patterns in aggregated data such as search trends, busyness trends, and environmental conditions (maps, air quality, temperature), providing a rich, location-specific snapshot of how populations engage with their surroundings. Aggregated over space and time, these embeddings ensure privacy while enabling nuanced spatial analysis and prediction for applications ranging from public health to socioeconomic modeling."
  },
  {
    "objectID": "index.html#application",
    "href": "index.html#application",
    "title": "Google Embeddings tutorial",
    "section": "Application",
    "text": "Application\nPDFM Embeddings can be applied to a wide range of geospatial prediction tasks, similar to census and socioeconomic statistics. Example use cases include:\n\nPopulation Health Outcomes: Predicting health statistics like disease prevalence or population health risks.\nSocioeconomic Factors: Modeling economic indicators and living conditions.\nRetail: Identifying promising locations for new stores, market expansion, and demand forecasting.\nMarketing and Sales: Characterizing high-performance regions and identifying similar areas to optimize marketing and sales efforts.\n\nBy incorporating spatial relationships and diverse feature types, these embeddings serve as a powerful tool for geospatial predictions."
  },
  {
    "objectID": "satellite-embedding/google_earth_embedding.html",
    "href": "satellite-embedding/google_earth_embedding.html",
    "title": "Google Embeddings tutorial",
    "section": "",
    "text": "Code\nimport ee\n\n\n\n\nCode\nimport leafmap.maplibregl as leafmap\n\n\n\n\nCode\nee.Authenticate()\n\n\nTrue\n\n\n\n\nCode\nee.Initialize(project=\"ee-zhanchaoyang\")\n\n\n\n\nCode\nm = leafmap.Map(projection=\"globe\", sidebar_visible=True)\nm.add_basemap(\"USGS.Imagery\")\nm.add_alphaearth_gui()\nm\n\n\n\n\n\n\n\nCode\nm = leafmap.Map(projection=\"globe\", sidebar_visible=True)\nm.add_basemap(\"USGS.Imagery\")\nm\n\n\n\n            \n            \n\n\n\n\n\n\n\nCode\nlon = -121.8036\nlat = 39.0372\nm.set_center(lon, lat, zoom=12)\n\n\n\n            \n            \n\n\n\n\nCode\npoint = ee.Geometry.Point(lon, lat)\ndataset = ee.ImageCollection(\"GOOGLE/SATELLITE_EMBEDDING/V1/ANNUAL\")\n\n\n\n            \n            \n\n\n\n\nCode\nimage1 = dataset.filterDate(\"2017-01-01\", \"2018-01-01\").filterBounds(point).first()\nimage2 = dataset.filterDate(\"2024-01-01\", \"2025-01-01\").filterBounds(point).first()\n\n\n\n            \n            \n\n\n\n\nCode\nvis_params = {\"min\": -0.3, \"max\": 0.3, \"bands\": [\"A01\", \"A16\", \"A09\"]}\nm.add_ee_layer(image1, vis_params, name=\"Year 1 embeddings\")\nm.add_ee_layer(image2, vis_params, name=\"Year 2 embeddings\")\n\n\n\n            \n            \n\n\n\n\nCode\ndot_prod = image1.multiply(image2).reduce(ee.Reducer.sum())\n\n\n\n            \n            \n\n\n\n\nCode\nvis_params = {\"min\": 0, \"max\": 1, \"palette\": [\"white\", \"black\"]}\nm.add_ee_layer(dot_prod, vis_params, name=\"Similarity\")\nm"
  }
]